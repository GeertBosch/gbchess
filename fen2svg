#!/bin/bash
SVG_CHESS_DEFS=chessboard.svg # File with the chess piece and board definitions
SVG_CHESS_GRID=45 # Size of each square on the chess board
SVG_CHESS_XLINK=1 # Use the xlink:href for compatibility. Deprecated in SVG 2.0.

# This script takes a chess FEN piece placement and outputs an SVG file that shows
# the chessboard with that setup.
if [ $# -lt 1 ] ; then
    fen="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR/"
else
    fen=$1
fi

if [[ !"$fen" =~ ^([rnbqkpRNBQKP1-8]{1,8}/){7}[rnbqkpRNBQKP1-8]{1,8}$ ]] ; then
    echo "Invalid FEN piece placement: $fen"
    echo "Usage: $0 <fen>"
    exit 1
fi

if [ ! -f "$SVG_CHESS_DEFS" ] ; then
    echo "Missing input SVG chessboard definition file: $SVG_CHESS_DEFS"
    exit 2
fi

# Copy styles and definitions from the source file
size=$((8 * $SVG_CHESS_GRID))
echo -n "<svg xmlns=\"http://www.w3.org/2000/svg\""
if [ -n "$SVG_CHESS_XLINK" ] ; then
    echo -n " xmlns:xlink=\"http://www.w3.org/1999/xlink\""
fi
echo " width=\"$size\" height=\"$size\">"
awk -v "xlink=$SVG_CHESS_XLINK" '/(desc|style|defs)[>]/ {
    show = !show
    print
    next
}
show { 
    if (xlink) sub(/ href=/, " xlink:href=")
    print
}
' chessboard.svg

# Create the board
href=href
if [ -n "$SVG_CHESS_XLINK" ] ; then
    href=xlink:href
fi
echo "  <use id="\"board\"" $href=\"#chessboard\" />"

# Place the pieces
xpos=0
ypos=0
files="abcdefgh"
for ((i = 0; i < ${#fen}; ++i)) ; do
    char=${fen:i:1}
    case $char in
        1 | 2 | 3 | 4 | 5 | 6 | 7 | 8) xpos=$((xpos + char)) ;;
        /) xpos=0; ypos=$((ypos + 1)) ;;
        k | K | q | Q | r | R | b | B | n | N | p | P)
            square=${files:xpos:1}$((ypos + 1))
            echo -n "  <use id=\"$square\" $href=\"#$char\""
            echo " x=\"$((xpos * SVG_CHESS_GRID))\" y=\"$((ypos * SVG_CHESS_GRID))\" />" 
            xpos=$((xpos + 1)) ;;
    esac
done
echo "</svg>"
